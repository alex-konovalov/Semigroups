#############################################################################
##
#W  semigrp.xml
#Y  Copyright (C) 2020                                   Luke Elliott
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="ParseRelations">
<ManSection>
  <Oper Name = "ParseRelations" Arg = "gens, rels"/>
  <Returns>A list of pairs of semigroup elements.</Returns>
  <Description>
    <C>ParseRelations</C> can be used to convert a string describing relations
    for a semigroup to the list of pairs of semigroup elements it represents
    (white space is ignored). e.g. the string  x y^2 = (a^2b)^2x, z=xy = yzx
    would become [ [ x*y^2, (a^2*b)^2*x ], [ z, x*y ], [ x*y, y*z*x ] ].
    <P/>

    <A/>gens<A/> must be a list of generators for a free semigroup, each being
    a single english letter (in upper or lower case). <A/>rels<A/> is a string
    that lists the equalities desired.
    <P/>

    <Example><![CDATA[
gap> f := FreeSemigroup("x", "y", "z");;                           
gap> AssignGeneratorVariables(f);
#I  Assigned the global variables [ x, y, z ]
gap> ParseRelations([x, y, z], "  x=(y^2z)^2x, y=xxx , z=y^3"); 
[ [ x, (y^2*z)^2*x ], [ y, x^3 ], [ z, y^3 ] ]
gap> r := ParseRelations([x, y, z], "  x=(y^2z)^2x, y=xxx , z=y^3");
[ [ x, (y^2*z)^2*x ], [ y, x^3 ], [ z, y^3 ] ]
gap> f / r;
<fp semigroup on the generators [ x, y, z ]>
gap> f2 := FreeSemigroup("a");                                     
<free semigroup on the generators [ a ]>
gap> f2 / ParseRelations(GeneratorsOfSemigroup(f2), "a = a^2");
<fp semigroup on the generators [ a ]>]]></Example>
  </Description>
</ManSection>
<#/GAPDoc>

