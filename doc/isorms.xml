#############################################################################
##
#W  isorms.xml
#Y  Copyright (C) 2015                                   James D. Mitchell
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="IsRMSIsoByTriple">
  <ManSection>
    <Filt Name = "IsRMSIsoByTriple" Type = "Category"/>
    <Filt Name = "IsRZMSIsoByTriple" Type = "Category"/>
    <Description>
      The isomorphisms between finite Rees matrix or 0-matrix semigroups
      <C>S</C> and <C>T</C> over groups <C>G</C> and <C>H</C>, respectively,
      specified by a triple consisting of:

      <Enum>

        <Item>
          an isomorphism of the underlying graph of <C>S</C> to the underlying
          graph of of <C>T</C>
        </Item>
        
        <Item>
          an isomorphism from <C>G</C> to <C>H</C>
        </Item>
        
        <Item>
          a function from <C>Rows(S)</C> union <C>Columns(S)</C> to <C>H</C>
        </Item>
      
      </Enum>

      belong to the categories <C>IsRMSIsoByTriple</C> and
      <C>IsRZMSIsoByTriple</C>.  Basic operators for such isomorphism are given
      in <Ref Subsect = 
        "Operators for isomorphisms of Rees (0-)matrix semigroup by triples"/>,
      and basic operations are:

      <Ref Attr = "Range" BookName = "ref"/>,
      <Ref Attr = "Source" BookName = "ref"/>,
      <Ref Oper = "ELM_LIST" Label = "for IsRMSIsoByTriple"/>,
      <Ref Func = "CompositionMapping" BookName = "ref"/>,
      <Ref Oper = "ImagesElm" Label = "for IsRMSIsoByTriple"/>,
      <Ref Oper = "ImagesRepresentative" Label = "for IsRMSIsoByTriple"/>, 
      <Ref Attr = "InverseGeneralMapping" Label = "for IsRMSIsoByTriple"/>,
      <Ref Oper = "PreImagesRepresentative" BookName = "ref"/>,
      <Ref Prop = "IsOne" Label = "for IsRMSIsoByTriple"/>.
      
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="ELM_LIST">
  <ManSection>
    <Oper Name = "ELM_LIST" Label = "for IsRMSIsoByTriple" 
      Arg = "map, pos"/>
    <Returns>
      A component of an isomorphism of Rees (0-)matrix semigroups by triple.
    </Returns>
    <Description>
      <C>ELM_LIST(<A>map</A>, <A>i</A>)</C> returns the <C>i</C>th component of
      the Rees (0-)matrix semigroup isomorphism by triple <A>map</A> when 
      <C>i = 1, 2, 3</C>. 
      <P/>

      The components of an isomorphism of Rees (0-)matrix semigroups by triple
      are:
        <Enum>
          <Item>
            An isomorphism of the underlying graphs of the source and range of
            <A>map</A>, respectively.
          </Item>
          
          <Item>
            An isomorphism of the underlying groups of the source and range of
            <A>map</A>, respectively.
          </Item>

          <Item>
            An function from the union of the rows and columns of the source of
            <A>map</A> to the underlying group of the range of <A>map</A>. 
          </Item>
        </Enum>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="CompositionMapping2">
  <ManSection>
    <Oper Name = "CompositionMapping2" Label = "for IsRMSIsoByTriple" 
      Arg = "map1, map2"/>
    <Oper Name = "CompositionMapping2" Label = "for IsRZMSIsoByTriple" 
      Arg = "map1, map2"/>
    <Returns>
      A Rees (0-)matrix semigroup by triple.
    </Returns>
    <Description>
      If <A>map1</A> and <A>map2</A> are isomorphisms of Rees matrix or
      0-matrix semigroups specified by triples and the range of <A>map2</A> is
      contained in the source of <A>map1</A>, then
      <C>CompositionMapping2(<A>map1</A>, <A>map2</A>)</C> returns the
      isomorphism from <C>Source(<A>map2</A>)</C> to <C>Range(<A>map1</A>)</C>
      specified by the triple with components:

      <Enum>
        <Item>
          <C><A>map1</A>[1] * <A>map2</A>[1]</C>
        </Item>

        <Item>
          <C><A>map1</A>[2] * <A>map2</A>[2]</C>
        </Item>

        <Item>
          the componentwise product of <C><A>map1</A>[1] * <A>map2</A>[3]</C> 
          and  <C><A>map1</A>[3] * <A>map2</A>[2]</C>.
        </Item>
      </Enum>
      <Example><![CDATA[
gap> R := ReesZeroMatrixSemigroup(Group([(1, 2, 3, 4)]),
> [[(1, 3)(2, 4), (1, 4, 3, 2), (), (1, 2, 3, 4), (1, 3)(2, 4), 0],
>  [(1, 4, 3, 2), 0, (), (1, 4, 3, 2), (1, 2, 3, 4), (1, 2, 3, 4)],
>  [(), (), (1, 4, 3, 2), (1, 2, 3, 4), 0, (1, 2, 3, 4)],
>  [(1, 2, 3, 4), (1, 4, 3, 2), (1, 2, 3, 4), 0, (), (1, 2, 3, 4)],
>  [(1, 3)(2, 4), (1, 2, 3, 4), 0, (), (1, 4, 3, 2), (1, 2, 3, 4)],
>  [0, (1, 2, 3, 4), (1, 2, 3, 4), (1, 2, 3, 4), (1, 2, 3, 4), ()]]);
<Rees 0-matrix semigroup 6x6 over Group([ (1,2,3,4) ])>
gap> G := AutomorphismGroup(R);
<automorphism group of <Rees 0-matrix semigroup 6x6 over Group([ (1,2,3,
4) ])> with 4 generators>
gap> G.2;
(( 3, 4, 6, 5)( 7, 9,11,10), GroupHomomorphismByImages( Group(
[ (1,2,3,4) ] ), Group( [ (1,2,3,4) ] ), [ (1,2,3,4) ], [ (1,2,3,4) ] ),
[ (), (1,2,3,4), (1,2,3,4), (1,3)(2,4), (1,2,3,4), (), (1,3)(2,4), (),
  (1,3)(2,4), (1,2,3,4), (1,4,3,2), (1,2,3,4) ])
gap> G.3;
(( 2, 3)( 5, 6)( 7, 9)( 8,11), GroupHomomorphismByImages( Group(
[ (1,2,3,4) ] ), Group( [ (1,2,3,4) ] ), [ (1,2,3,4) ], [ (1,2,3,4) ] ),
[ (), (1,3)(2,4), (1,3)(2,4), (1,3)(2,4), (1,4,3,2), (1,2,3,4), (1,3)(2,4),
  (1,4,3,2), (1,3)(2,4), (), (1,2,3,4), (1,3)(2,4) ])
gap> CompositionMapping2(G.2, G.3);
(( 2, 3, 4, 5)( 8,11,10, 9), GroupHomomorphismByImages( Group(
[ (1,2,3,4) ] ), Group( [ (1,2,3,4) ] ), [ (1,2,3,4) ], [ (1,2,3,4) ] ),
[ (), (1,4,3,2), (1,4,3,2), (1,4,3,2), (1,4,3,2), (1,4,3,2), (), (1,4,3,2),
  (1,4,3,2), (1,4,3,2), (1,4,3,2), (1,4,3,2) ])]]></Example>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="ImagesElm">
  <ManSection>
    <Oper Name = "ImagesElm" Label = "for IsRMSIsoByTriple" Arg = "map, pt"/>
    <Oper Name = "ImagesRepresentative" Label = "for IsRMSIsoByTriple" 
      Arg = "map, pt"/>
    <Returns>
      An element of a Rees (0-)matrix semigroup or a list containing such an
      element.
    </Returns>

    <Description>
      If <A>map</A> is an isomorphism of Rees matrix or 0-matrix semigroups
      specified by a triple and <A>pt</A> is an element of the source of
      <A>map</A>, then <C>ImagesRepresentative(<A>map</A>, <A>pt</A>) =
      <A>pt</A> ^ <A>map</A></C> returns the image of <A>pt</A> under
      <A>map</A>.  
      <P/>
      
      The image of <A>pt</A> under <A>map</A> of <C>Range(<A>map</A>)</C> is the
      element with components:
      
      <Enum>
        <Item>
          <C><A>pt</A>[1] ^ <A>map</A>[1]</C> 
        </Item>
        <Item>
          <C>(<A>pt</A>[1] ^ <A>map</A>[3]) * (<A>pt</A>[2] ^ <A>map</A>[2]) 
            * (<A>pt</A>[3] ^ <A>map</A>[3]) ^ -1</C>
        </Item>
        <Item>
          <C><A>pt</A>[3] ^ <A>map</A>[1]</C>.
        </Item>
      </Enum>

      <C>ImagesElm(<A>map</A>, <A>pt</A>)</C> simply returns
      <C>[ImagesRepresentative(<A>map</A>, <A>pt</A>)]</C>.

      <Example><![CDATA[
gap> R := ReesZeroMatrixSemigroup( Group( [ (2,8), (2,8,6) ] ),
> [[0,       (2,8),   0,       0,     0,       (2,8,6)], 
>  [(),      0,       (2,8,6), (2,6), (2,6,8), 0      ],
>  [(2,8,6), 0,       (2,6,8), (2,8), (),      0      ], 
>  [(2,8,6), 0,       (2,6,8), (2,8), (),      0      ], 
>  [0,       (2,8,6), 0,       0,     0,       (2,8)  ], 
>  [(2,8,6), 0,       (2,6,8), (2,8), (),      0      ]]);
<Rees 0-matrix semigroup 6x6 over Group([ (2,8), (2,8,6) ])>
gap> map := RZMSIsoByTriple(R, R,
> [ (), IdentityMapping( Group( [ (2,8), (2,8,6) ] ) ),
> [ (), (2,6,8), (), (), (), (2,8,6), (2,8,6), (), (), (), (2,6,8), () ] ]);
gap> ImagesElm(RMSElement(R, 1, (2,8), 2), map);
[(1,(2,6),2)]]]></Example>
    </Description>
  </ManSection>
<#/GAPDoc>
